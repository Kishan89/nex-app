# Database connection URLs (PostgreSQL - Supabase)
# DATABASE_URL uses connection pooler (port 6543) with pgbouncer for better performance
DATABASE_URL="postgresql://<DB_USER>:<DB_PASSWORD>@<HOST>.pooler.supabase.com:6543/postgres?pgbouncer=true&connection_limit=5&pool_timeout=30&connect_timeout=15"
# DIRECT_URL uses direct connection (port 5432) for migrations and schema changes
DIRECT_URL="postgresql://<DB_USER>:<DB_PASSWORD>@<HOST>.pooler.supabase.com:5432/postgres"

# Supabase configuration
# Get these from your Supabase project settings
NEXT_PUBLIC_SUPABASE_URL="https://<PROJECT_REF>.supabase.co"
NEXT_PUBLIC_SUPABASE_ANON_KEY="<YOUR_SUPABASE_ANON_KEY>"

# JWT secret (for authentication)
# Generate with: node -e "console.log(require('crypto').randomBytes(64).toString('base64'))"
JWT_SECRET="<YOUR_RANDOM_SECRET_KEY>"

# Firebase Admin credentials (for push notifications)
# Get from Firebase Console > Project Settings > Service Accounts > Generate New Private Key
FIREBASE_PROJECT_ID="<YOUR_FIREBASE_PROJECT_ID>"
FIREBASE_CLIENT_EMAIL="<YOUR_FIREBASE_CLIENT_EMAIL>"
FIREBASE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\n<YOUR_FIREBASE_PRIVATE_KEY_CONTENT>\n-----END PRIVATE KEY-----\n"

# Alternative: Full Firebase Service Account JSON (easier for Railway deployment)
FIREBASE_SERVICE_ACCOUNT_KEY='{"type":"service_account","project_id":"<PROJECT_ID>","private_key_id":"<KEY_ID>","private_key":"-----BEGIN PRIVATE KEY-----\\n<KEY_CONTENT>\\n-----END PRIVATE KEY-----\\n","client_email":"<CLIENT_EMAIL>","client_id":"<CLIENT_ID>","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_x509_cert_url":"<CERT_URL>","universe_domain":"googleapis.com"}'

# Google OAuth credentials
# Get from Google Cloud Console > APIs & Services > Credentials
GOOGLE_CLIENT_ID="<YOUR_GOOGLE_CLIENT_ID>"

# Server configuration
PORT=3001
NODE_ENV=production
