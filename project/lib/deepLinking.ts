// lib/deepLinking.tsimport * as Linking from 'expo-linking';import { router } from 'expo-router';export const deepLinkingConfig = {  prefixes: [    'nexeed://',    'https://nexeed.app',    'boltexponativewind://', // Keep existing scheme    'exp+bolt-expo-nativewind://' // Keep existing scheme  ],  config: {    screens: {      '(tabs)': {        screens: {          index: '',          notifications: 'notifications',          chats: 'chats',          settings: 'settings',        },      },      'post/[id]': 'post/:id',      'profile/[id]': 'profile/:id',      'chat/[id]': 'chat/:id',      login: 'login',      register: 'register',      'create-post': 'create-post',      search: 'search',      'edit-profile': 'edit-profile',    },  },};export const handleDeepLink = (url: string) => {  try {    const { hostname, path, queryParams, scheme } = Linking.parse(url);    // Handle nexeed://post/{postId}    if (scheme === 'nexeed' && path) {      if (path.startsWith('post/')) {        const postId = path.replace('post/', '');        if (postId) {          setTimeout(() => {            router.push(`/post/${postId}`);          }, 100);          return true;        }      }    }    // Handle https://nexeed.app/post/{postId} or https://example.com/nexeed/post/{postId}    if (scheme === 'https' && (      (hostname === 'nexeed.app' && path?.startsWith('/post/')) ||      (hostname === 'example.com' && path?.startsWith('/nexeed/post/'))    )) {      let postId = '';      if (hostname === 'nexeed.app') {        postId = path.replace('/post/', '');      } else if (hostname === 'example.com') {        postId = path.replace('/nexeed/post/', '');      }      if (postId) {        setTimeout(() => {          router.push(`/post/${postId}`);        }, 100);        return true;      }    }    // Handle other nexeed:// paths    if (scheme === 'nexeed' && path) {      setTimeout(() => {        router.push(`/${path}` as any);      }, 100);      return true;    }    return false;  } catch (error) {    return false;  }};export const generatePostShareLink = (postId: string) => {  return {    deepLink: `nexeed://post/${postId}`,    webLink: `https://nexeed.app/post/${postId}`,  };};