import React from 'react';import {  View,  Text,  StyleSheet,  Modal,  TouchableOpacity,  ScrollView,} from 'react-native';import { X, Star, Heart, MessageCircle, PenTool } from 'lucide-react-native';import { Spacing, FontSizes, FontWeights, BorderRadius, Shadows } from '@/constants/theme';import { useTheme } from '@/context/ThemeContext';// XP Rules constantsconst XP_RULES = {  POST_CREATED: 5,  LIKE_RECEIVED: 1,  COMMENT_RECEIVED: 2,};interface XPRulesModalProps {  visible: boolean;  onClose: () => void;}export default function XPRulesModal({ visible, onClose }: XPRulesModalProps) {  const { colors } = useTheme();  const rules = [    {      icon: <PenTool size={24} color={colors.primary} />,      title: 'Create a Post',      description: 'Share your thoughts, images, or content with the community',      xp: XP_RULES.POST_CREATED,      color: colors.primary,    },    {      icon: <Heart size={24} color={colors.like} />,      title: 'Receive a Like',      description: 'When someone likes your post, you earn XP',      xp: XP_RULES.LIKE_RECEIVED,      color: colors.like,    },    {      icon: <MessageCircle size={24} color={colors.secondary} />,      title: 'Receive a Comment',      description: 'When someone comments on your post, you earn XP',      xp: XP_RULES.COMMENT_RECEIVED,      color: colors.secondary,    },  ];  const styles = createStyles(colors);  return (    <Modal      visible={visible}      animationType="fade"      transparent      onRequestClose={onClose}    >      <View style={styles.overlay}>        <View style={styles.modalContainer}>          <View style={styles.header}>            <View style={styles.titleContainer}>              <Star size={24} color={colors.primary} />              <Text style={styles.title}>XP System Rules</Text>            </View>            <TouchableOpacity onPress={onClose} style={styles.closeButton}>              <X size={24} color={colors.textMuted} />            </TouchableOpacity>          </View>          <ScrollView style={styles.content} showsVerticalScrollIndicator={false}>            <Text style={styles.description}>              Earn Experience Points (XP) by being active in the Nexeed community!               Here's how you can gain XP:            </Text>            <View style={styles.rulesContainer}>              {rules.map((rule, index) => (                <View key={index} style={styles.ruleItem}>                  <View style={[styles.iconContainer, { backgroundColor: `${rule.color}15` }]}>                    {rule.icon}                  </View>                  <View style={styles.ruleContent}>                    <View style={styles.ruleHeader}>                      <Text style={styles.ruleTitle}>{rule.title}</Text>                      <View style={styles.xpBadge}>                        <Text style={styles.xpText}>+{rule.xp} XP</Text>                      </View>                    </View>                    <Text style={styles.ruleDescription}>{rule.description}</Text>                  </View>                </View>              ))}            </View>            <View style={styles.tipsContainer}>              <Text style={styles.tipsTitle}>ðŸ’¡ Pro Tips</Text>              <View style={styles.tipsList}>                <Text style={styles.tipItem}>â€¢ Create engaging content to get more likes and comments</Text>                <Text style={styles.tipItem}>â€¢ Interact with other users to build your community</Text>                <Text style={styles.tipItem}>â€¢ Regular posting helps you climb the XP leaderboard</Text>                <Text style={styles.tipItem}>â€¢ Quality content gets more engagement than quantity</Text>              </View>            </View>            <View style={styles.footer}>            </View>          </ScrollView>        </View>      </View>    </Modal>  );}const createStyles = (colors: any) => StyleSheet.create({  overlay: {    flex: 1,    backgroundColor: 'rgba(0, 0, 0, 0.8)',    justifyContent: 'center',    alignItems: 'center',    paddingHorizontal: Spacing.lg,  },  modalContainer: {    backgroundColor: colors.backgroundSecondary,    borderRadius: BorderRadius.xl,    width: '100%',    maxWidth: 400,    maxHeight: '80%',    ...Shadows.large,  },  header: {    flexDirection: 'row',    justifyContent: 'space-between',    alignItems: 'center',    paddingHorizontal: Spacing.lg,    paddingVertical: Spacing.md,    borderBottomWidth: 1,    borderBottomColor: colors.border,  },  titleContainer: {    flexDirection: 'row',    alignItems: 'center',    gap: Spacing.sm,  },  title: {    fontSize: FontSizes.xl,    fontWeight: FontWeights.bold,    color: colors.text,  },  closeButton: {    padding: Spacing.xs,  },  content: {    paddingHorizontal: Spacing.lg,    paddingVertical: Spacing.md,  },  description: {    fontSize: FontSizes.md,    color: colors.textSecondary,    lineHeight: 22,    marginBottom: Spacing.lg,    textAlign: 'center',  },  rulesContainer: {    gap: Spacing.md,    marginBottom: Spacing.xl,  },  ruleItem: {    flexDirection: 'row',    backgroundColor: colors.backgroundTertiary,    borderRadius: BorderRadius.lg,    padding: Spacing.md,    alignItems: 'flex-start',  },  iconContainer: {    width: 48,    height: 48,    borderRadius: BorderRadius.lg,    alignItems: 'center',    justifyContent: 'center',    marginRight: Spacing.md,  },  ruleContent: {    flex: 1,  },  ruleHeader: {    flexDirection: 'row',    justifyContent: 'space-between',    alignItems: 'center',    marginBottom: Spacing.xs,  },  ruleTitle: {    fontSize: FontSizes.md,    fontWeight: FontWeights.semibold,    color: colors.text,    flex: 1,  },  xpBadge: {    backgroundColor: colors.primary,    paddingHorizontal: Spacing.sm,    paddingVertical: Spacing.xs,    borderRadius: BorderRadius.md,  },  xpText: {    fontSize: FontSizes.xs,    fontWeight: FontWeights.bold,    color: colors.background,  },  ruleDescription: {    fontSize: FontSizes.sm,    color: colors.textMuted,    lineHeight: 18,  },  tipsContainer: {    backgroundColor: colors.backgroundTertiary,    borderRadius: BorderRadius.lg,    padding: Spacing.md,    marginBottom: Spacing.lg,  },  tipsTitle: {    fontSize: FontSizes.md,    fontWeight: FontWeights.semibold,    color: colors.text,    marginBottom: Spacing.sm,  },  tipsList: {    gap: Spacing.xs,  },  tipItem: {    fontSize: FontSizes.sm,    color: colors.textSecondary,    lineHeight: 20,  },  footer: {    alignItems: 'center',    paddingVertical: Spacing.sm,  },});